/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/0Ro1MEAjnpg
 */
import { CardTitle, CardDescription, CardHeader, CardContent, Card } from "@/components/ui/card"
import { Label } from "@/components/ui/label"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"
import { Button } from "@/components/ui/button"

import { useForm } from "react-hook-form"
import { useEffect, useState } from "react"
import { Product, Restaurante } from "../types"
import { getAllProducts, getRestaurants, updateProduct, updateRestaurant } from "../api/task.api"
import { useNavigate, useParams } from 'react-router-dom';


export function EditStoreForm() {

  const [restaurant, setRestaurant] = useState<Restaurante>();

  const navigate = useNavigate();

  

  useEffect(() => {
    async function loadTasks() {
      const res = await getRestaurants()
      const restaurants = res.data;
      const producto = restaurants[0];
      setRestaurant(producto);      
    }

    loadTasks();
  }, [])



  const { register, handleSubmit, formState:{
    errors
  } } = useForm();

  const onSubmit = handleSubmit(async (data) => {
    console.log(data);
    await updateRestaurant( "1", data)
    navigate("/")
  })

  return (
    <Card>
      <CardHeader>
        <CardTitle>Editar tienda</CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        <form onSubmit={onSubmit}>
          <div className="grid gap-4">
            <div className="grid gap-1">
              <Label className="text-sm" htmlFor="nombre">
                Nombre
              </Label>
              <Input {...register("nombre")} id="nombre" placeholder={restaurant?.nombre} required />
              {errors.nombre && <span>Este campo es requerido</span>}
            </div>
            <div className="grid gap-1">
              <Label className="text-sm" htmlFor="descripcion">
                Logo URL
              </Label>
              <Textarea {...register("logo")} className="min-h-[100px]" id="logo" placeholder="Entra la URL del logo" required />
              {errors.logo && <span>Este campo es requerido</span>}
            </div>
            <div className="grid gap-1">
              <Label className="text-sm" htmlFor="precio">
                Información de contacto
              </Label>
              <Input {...register("informacion_contacto")} id="informacion_contacto" placeholder="Entra la información de contacto" required />
              {errors.precio && <span>Este campo es requerido</span>}
            </div>
          </div>
          <Button size="sm">Actualizar</Button>
        </form>
      </CardContent>
    </Card>
  )
}
